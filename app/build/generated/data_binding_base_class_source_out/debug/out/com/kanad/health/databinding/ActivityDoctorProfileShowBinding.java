// Generated by view binder compiler. Do not edit!
package com.kanad.health.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kanad.health.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDoctorProfileShowBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView DegreeStatusForProfile;

  @NonNull
  public final TextView VerificationStatusForProfile;

  @NonNull
  public final Button bookASlot;

  @NonNull
  public final TextView districtForProfilDoctor;

  @NonNull
  public final TextView doctorNameOnProfile;

  @NonNull
  public final TextView expirienceForProfilDoctor;

  @NonNull
  public final CircleImageView imageOnDoctorProfile;

  @NonNull
  public final TextView instituteForProfilDoctor;

  @NonNull
  public final TextView specilizationForProfilDoctor;

  @NonNull
  public final TextView stateForProfilDoctor;

  private ActivityDoctorProfileShowBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView DegreeStatusForProfile, @NonNull TextView VerificationStatusForProfile,
      @NonNull Button bookASlot, @NonNull TextView districtForProfilDoctor,
      @NonNull TextView doctorNameOnProfile, @NonNull TextView expirienceForProfilDoctor,
      @NonNull CircleImageView imageOnDoctorProfile, @NonNull TextView instituteForProfilDoctor,
      @NonNull TextView specilizationForProfilDoctor, @NonNull TextView stateForProfilDoctor) {
    this.rootView = rootView;
    this.DegreeStatusForProfile = DegreeStatusForProfile;
    this.VerificationStatusForProfile = VerificationStatusForProfile;
    this.bookASlot = bookASlot;
    this.districtForProfilDoctor = districtForProfilDoctor;
    this.doctorNameOnProfile = doctorNameOnProfile;
    this.expirienceForProfilDoctor = expirienceForProfilDoctor;
    this.imageOnDoctorProfile = imageOnDoctorProfile;
    this.instituteForProfilDoctor = instituteForProfilDoctor;
    this.specilizationForProfilDoctor = specilizationForProfilDoctor;
    this.stateForProfilDoctor = stateForProfilDoctor;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDoctorProfileShowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDoctorProfileShowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_doctor_profile_show, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDoctorProfileShowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Degree_Status_for_profile;
      TextView DegreeStatusForProfile = ViewBindings.findChildViewById(rootView, id);
      if (DegreeStatusForProfile == null) {
        break missingId;
      }

      id = R.id.Verification_Status_for_profile;
      TextView VerificationStatusForProfile = ViewBindings.findChildViewById(rootView, id);
      if (VerificationStatusForProfile == null) {
        break missingId;
      }

      id = R.id.book_a_slot;
      Button bookASlot = ViewBindings.findChildViewById(rootView, id);
      if (bookASlot == null) {
        break missingId;
      }

      id = R.id.district_for_profil_doctor;
      TextView districtForProfilDoctor = ViewBindings.findChildViewById(rootView, id);
      if (districtForProfilDoctor == null) {
        break missingId;
      }

      id = R.id.doctor_name_on_profile;
      TextView doctorNameOnProfile = ViewBindings.findChildViewById(rootView, id);
      if (doctorNameOnProfile == null) {
        break missingId;
      }

      id = R.id.expirience_for_profil_doctor;
      TextView expirienceForProfilDoctor = ViewBindings.findChildViewById(rootView, id);
      if (expirienceForProfilDoctor == null) {
        break missingId;
      }

      id = R.id.image_on_doctor_profile;
      CircleImageView imageOnDoctorProfile = ViewBindings.findChildViewById(rootView, id);
      if (imageOnDoctorProfile == null) {
        break missingId;
      }

      id = R.id.institute_for_profil_doctor;
      TextView instituteForProfilDoctor = ViewBindings.findChildViewById(rootView, id);
      if (instituteForProfilDoctor == null) {
        break missingId;
      }

      id = R.id.specilization_for_profil_doctor;
      TextView specilizationForProfilDoctor = ViewBindings.findChildViewById(rootView, id);
      if (specilizationForProfilDoctor == null) {
        break missingId;
      }

      id = R.id.state_for_profil_doctor;
      TextView stateForProfilDoctor = ViewBindings.findChildViewById(rootView, id);
      if (stateForProfilDoctor == null) {
        break missingId;
      }

      return new ActivityDoctorProfileShowBinding((RelativeLayout) rootView, DegreeStatusForProfile,
          VerificationStatusForProfile, bookASlot, districtForProfilDoctor, doctorNameOnProfile,
          expirienceForProfilDoctor, imageOnDoctorProfile, instituteForProfilDoctor,
          specilizationForProfilDoctor, stateForProfilDoctor);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
