// Generated by view binder compiler. Do not edit!
package com.kanad.health.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.kanad.health.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDoctorFillFormBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView ageCheckForHealth;

  @NonNull
  public final TextView back;

  @NonNull
  public final TextInputLayout collegeInputtext;

  @NonNull
  public final RadioButton consultant;

  @NonNull
  public final AutoCompleteTextView degree;

  @NonNull
  public final TextInputLayout degreeInputtext;

  @NonNull
  public final TextView districtofdoctorfill;

  @NonNull
  public final TextView doctorName;

  @NonNull
  public final TextView dummyForDoctorName;

  @NonNull
  public final TextView getdoctorUidDummy2;

  @NonNull
  public final AutoCompleteTextView institute;

  @NonNull
  public final TextView nextbutton;

  @NonNull
  public final RadioButton owner;

  @NonNull
  public final LinearLayout photoLayout;

  @NonNull
  public final RadioButton practicing;

  @NonNull
  public final RadioGroup radiogroup;

  @NonNull
  public final RadioButton rented;

  @NonNull
  public final TextView selectedTextRadioButton;

  @NonNull
  public final AutoCompleteTextView specializations;

  @NonNull
  public final TextInputLayout specilizationInputtext;

  @NonNull
  public final TextView stateofdoctorfill;

  @NonNull
  public final AutoCompleteTextView yearofcomepletion;

  @NonNull
  public final TextInputLayout yearofcompletionInputtext;

  @NonNull
  public final TextInputLayout yearofexpirienceInputTextVew;

  @NonNull
  public final EditText yearofexpirirnce;

  private ActivityDoctorFillFormBinding(@NonNull LinearLayout rootView,
      @NonNull TextView ageCheckForHealth, @NonNull TextView back,
      @NonNull TextInputLayout collegeInputtext, @NonNull RadioButton consultant,
      @NonNull AutoCompleteTextView degree, @NonNull TextInputLayout degreeInputtext,
      @NonNull TextView districtofdoctorfill, @NonNull TextView doctorName,
      @NonNull TextView dummyForDoctorName, @NonNull TextView getdoctorUidDummy2,
      @NonNull AutoCompleteTextView institute, @NonNull TextView nextbutton,
      @NonNull RadioButton owner, @NonNull LinearLayout photoLayout,
      @NonNull RadioButton practicing, @NonNull RadioGroup radiogroup, @NonNull RadioButton rented,
      @NonNull TextView selectedTextRadioButton, @NonNull AutoCompleteTextView specializations,
      @NonNull TextInputLayout specilizationInputtext, @NonNull TextView stateofdoctorfill,
      @NonNull AutoCompleteTextView yearofcomepletion,
      @NonNull TextInputLayout yearofcompletionInputtext,
      @NonNull TextInputLayout yearofexpirienceInputTextVew, @NonNull EditText yearofexpirirnce) {
    this.rootView = rootView;
    this.ageCheckForHealth = ageCheckForHealth;
    this.back = back;
    this.collegeInputtext = collegeInputtext;
    this.consultant = consultant;
    this.degree = degree;
    this.degreeInputtext = degreeInputtext;
    this.districtofdoctorfill = districtofdoctorfill;
    this.doctorName = doctorName;
    this.dummyForDoctorName = dummyForDoctorName;
    this.getdoctorUidDummy2 = getdoctorUidDummy2;
    this.institute = institute;
    this.nextbutton = nextbutton;
    this.owner = owner;
    this.photoLayout = photoLayout;
    this.practicing = practicing;
    this.radiogroup = radiogroup;
    this.rented = rented;
    this.selectedTextRadioButton = selectedTextRadioButton;
    this.specializations = specializations;
    this.specilizationInputtext = specilizationInputtext;
    this.stateofdoctorfill = stateofdoctorfill;
    this.yearofcomepletion = yearofcomepletion;
    this.yearofcompletionInputtext = yearofcompletionInputtext;
    this.yearofexpirienceInputTextVew = yearofexpirienceInputTextVew;
    this.yearofexpirirnce = yearofexpirirnce;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDoctorFillFormBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDoctorFillFormBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_doctor_fill_form, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDoctorFillFormBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.age_check_for_health;
      TextView ageCheckForHealth = ViewBindings.findChildViewById(rootView, id);
      if (ageCheckForHealth == null) {
        break missingId;
      }

      id = R.id.back;
      TextView back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.college_inputtext;
      TextInputLayout collegeInputtext = ViewBindings.findChildViewById(rootView, id);
      if (collegeInputtext == null) {
        break missingId;
      }

      id = R.id.consultant;
      RadioButton consultant = ViewBindings.findChildViewById(rootView, id);
      if (consultant == null) {
        break missingId;
      }

      id = R.id.degree;
      AutoCompleteTextView degree = ViewBindings.findChildViewById(rootView, id);
      if (degree == null) {
        break missingId;
      }

      id = R.id.degree_inputtext;
      TextInputLayout degreeInputtext = ViewBindings.findChildViewById(rootView, id);
      if (degreeInputtext == null) {
        break missingId;
      }

      id = R.id.districtofdoctorfill;
      TextView districtofdoctorfill = ViewBindings.findChildViewById(rootView, id);
      if (districtofdoctorfill == null) {
        break missingId;
      }

      id = R.id.doctor_name;
      TextView doctorName = ViewBindings.findChildViewById(rootView, id);
      if (doctorName == null) {
        break missingId;
      }

      id = R.id.dummy_for_doctor_name;
      TextView dummyForDoctorName = ViewBindings.findChildViewById(rootView, id);
      if (dummyForDoctorName == null) {
        break missingId;
      }

      id = R.id.getdoctor_uid_dummy2;
      TextView getdoctorUidDummy2 = ViewBindings.findChildViewById(rootView, id);
      if (getdoctorUidDummy2 == null) {
        break missingId;
      }

      id = R.id.institute;
      AutoCompleteTextView institute = ViewBindings.findChildViewById(rootView, id);
      if (institute == null) {
        break missingId;
      }

      id = R.id.nextbutton;
      TextView nextbutton = ViewBindings.findChildViewById(rootView, id);
      if (nextbutton == null) {
        break missingId;
      }

      id = R.id.owner;
      RadioButton owner = ViewBindings.findChildViewById(rootView, id);
      if (owner == null) {
        break missingId;
      }

      id = R.id.photo_layout;
      LinearLayout photoLayout = ViewBindings.findChildViewById(rootView, id);
      if (photoLayout == null) {
        break missingId;
      }

      id = R.id.practicing;
      RadioButton practicing = ViewBindings.findChildViewById(rootView, id);
      if (practicing == null) {
        break missingId;
      }

      id = R.id.radiogroup;
      RadioGroup radiogroup = ViewBindings.findChildViewById(rootView, id);
      if (radiogroup == null) {
        break missingId;
      }

      id = R.id.rented;
      RadioButton rented = ViewBindings.findChildViewById(rootView, id);
      if (rented == null) {
        break missingId;
      }

      id = R.id.selectedText_radioButton;
      TextView selectedTextRadioButton = ViewBindings.findChildViewById(rootView, id);
      if (selectedTextRadioButton == null) {
        break missingId;
      }

      id = R.id.specializations;
      AutoCompleteTextView specializations = ViewBindings.findChildViewById(rootView, id);
      if (specializations == null) {
        break missingId;
      }

      id = R.id.specilization_inputtext;
      TextInputLayout specilizationInputtext = ViewBindings.findChildViewById(rootView, id);
      if (specilizationInputtext == null) {
        break missingId;
      }

      id = R.id.stateofdoctorfill;
      TextView stateofdoctorfill = ViewBindings.findChildViewById(rootView, id);
      if (stateofdoctorfill == null) {
        break missingId;
      }

      id = R.id.yearofcomepletion;
      AutoCompleteTextView yearofcomepletion = ViewBindings.findChildViewById(rootView, id);
      if (yearofcomepletion == null) {
        break missingId;
      }

      id = R.id.yearofcompletion_inputtext;
      TextInputLayout yearofcompletionInputtext = ViewBindings.findChildViewById(rootView, id);
      if (yearofcompletionInputtext == null) {
        break missingId;
      }

      id = R.id.yearofexpirience_inputTextVew;
      TextInputLayout yearofexpirienceInputTextVew = ViewBindings.findChildViewById(rootView, id);
      if (yearofexpirienceInputTextVew == null) {
        break missingId;
      }

      id = R.id.yearofexpirirnce;
      EditText yearofexpirirnce = ViewBindings.findChildViewById(rootView, id);
      if (yearofexpirirnce == null) {
        break missingId;
      }

      return new ActivityDoctorFillFormBinding((LinearLayout) rootView, ageCheckForHealth, back,
          collegeInputtext, consultant, degree, degreeInputtext, districtofdoctorfill, doctorName,
          dummyForDoctorName, getdoctorUidDummy2, institute, nextbutton, owner, photoLayout,
          practicing, radiogroup, rented, selectedTextRadioButton, specializations,
          specilizationInputtext, stateofdoctorfill, yearofcomepletion, yearofcompletionInputtext,
          yearofexpirienceInputTextVew, yearofexpirirnce);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
