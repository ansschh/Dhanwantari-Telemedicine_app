// Generated by view binder compiler. Do not edit!
package com.kanad.health.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.kanad.health.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputLayout DISTRICTFORPROFILE;

  @NonNull
  public final AutoCompleteTextView DISTRICTS;

  @NonNull
  public final EditText FirstName;

  @NonNull
  public final AutoCompleteTextView GENDER;

  @NonNull
  public final AutoCompleteTextView IAmPerson;

  @NonNull
  public final AutoCompleteTextView LANGUAGE;

  @NonNull
  public final TextInputLayout LanguageForProfile;

  @NonNull
  public final EditText LastName;

  @NonNull
  public final TextInputLayout STATEFORPROFILE;

  @NonNull
  public final AutoCompleteTextView STATES;

  @NonNull
  public final TextInputLayout SexForProfile;

  @NonNull
  public final TextInputLayout UserId;

  @NonNull
  public final EditText addressProfile;

  @NonNull
  public final TextView age1;

  @NonNull
  public final TextView age2;

  @NonNull
  public final TextView ageCheckForHealth;

  @NonNull
  public final TextView ageForChecking;

  @NonNull
  public final TextView ageProfile;

  @NonNull
  public final TextView changeProfilePicture;

  @NonNull
  public final TextView doctor;

  @NonNull
  public final TextView dummyForDistrict;

  @NonNull
  public final TextView dummyForState;

  @NonNull
  public final TextView dummyForStatus;

  @NonNull
  public final TextView dummyForUri;

  @NonNull
  public final EditText emailProfile;

  @NonNull
  public final EditText mobileNumberProfile;

  @NonNull
  public final TextView nameProfile;

  @NonNull
  public final TextView normalPerson;

  @NonNull
  public final EditText passwordProfile;

  @NonNull
  public final LinearLayout photoLayout;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final TextView saveProfileText;

  private ActivityProfileBinding(@NonNull LinearLayout rootView,
      @NonNull TextInputLayout DISTRICTFORPROFILE, @NonNull AutoCompleteTextView DISTRICTS,
      @NonNull EditText FirstName, @NonNull AutoCompleteTextView GENDER,
      @NonNull AutoCompleteTextView IAmPerson, @NonNull AutoCompleteTextView LANGUAGE,
      @NonNull TextInputLayout LanguageForProfile, @NonNull EditText LastName,
      @NonNull TextInputLayout STATEFORPROFILE, @NonNull AutoCompleteTextView STATES,
      @NonNull TextInputLayout SexForProfile, @NonNull TextInputLayout UserId,
      @NonNull EditText addressProfile, @NonNull TextView age1, @NonNull TextView age2,
      @NonNull TextView ageCheckForHealth, @NonNull TextView ageForChecking,
      @NonNull TextView ageProfile, @NonNull TextView changeProfilePicture,
      @NonNull TextView doctor, @NonNull TextView dummyForDistrict, @NonNull TextView dummyForState,
      @NonNull TextView dummyForStatus, @NonNull TextView dummyForUri,
      @NonNull EditText emailProfile, @NonNull EditText mobileNumberProfile,
      @NonNull TextView nameProfile, @NonNull TextView normalPerson,
      @NonNull EditText passwordProfile, @NonNull LinearLayout photoLayout,
      @NonNull CircleImageView profileImage, @NonNull TextView saveProfileText) {
    this.rootView = rootView;
    this.DISTRICTFORPROFILE = DISTRICTFORPROFILE;
    this.DISTRICTS = DISTRICTS;
    this.FirstName = FirstName;
    this.GENDER = GENDER;
    this.IAmPerson = IAmPerson;
    this.LANGUAGE = LANGUAGE;
    this.LanguageForProfile = LanguageForProfile;
    this.LastName = LastName;
    this.STATEFORPROFILE = STATEFORPROFILE;
    this.STATES = STATES;
    this.SexForProfile = SexForProfile;
    this.UserId = UserId;
    this.addressProfile = addressProfile;
    this.age1 = age1;
    this.age2 = age2;
    this.ageCheckForHealth = ageCheckForHealth;
    this.ageForChecking = ageForChecking;
    this.ageProfile = ageProfile;
    this.changeProfilePicture = changeProfilePicture;
    this.doctor = doctor;
    this.dummyForDistrict = dummyForDistrict;
    this.dummyForState = dummyForState;
    this.dummyForStatus = dummyForStatus;
    this.dummyForUri = dummyForUri;
    this.emailProfile = emailProfile;
    this.mobileNumberProfile = mobileNumberProfile;
    this.nameProfile = nameProfile;
    this.normalPerson = normalPerson;
    this.passwordProfile = passwordProfile;
    this.photoLayout = photoLayout;
    this.profileImage = profileImage;
    this.saveProfileText = saveProfileText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.DISTRICT_FOR_PROFILE;
      TextInputLayout DISTRICTFORPROFILE = ViewBindings.findChildViewById(rootView, id);
      if (DISTRICTFORPROFILE == null) {
        break missingId;
      }

      id = R.id.DISTRICTS;
      AutoCompleteTextView DISTRICTS = ViewBindings.findChildViewById(rootView, id);
      if (DISTRICTS == null) {
        break missingId;
      }

      id = R.id.First_name;
      EditText FirstName = ViewBindings.findChildViewById(rootView, id);
      if (FirstName == null) {
        break missingId;
      }

      id = R.id.GENDER;
      AutoCompleteTextView GENDER = ViewBindings.findChildViewById(rootView, id);
      if (GENDER == null) {
        break missingId;
      }

      id = R.id.I_am_person;
      AutoCompleteTextView IAmPerson = ViewBindings.findChildViewById(rootView, id);
      if (IAmPerson == null) {
        break missingId;
      }

      id = R.id.LANGUAGE;
      AutoCompleteTextView LANGUAGE = ViewBindings.findChildViewById(rootView, id);
      if (LANGUAGE == null) {
        break missingId;
      }

      id = R.id.Language_for_profile;
      TextInputLayout LanguageForProfile = ViewBindings.findChildViewById(rootView, id);
      if (LanguageForProfile == null) {
        break missingId;
      }

      id = R.id.Last_name;
      EditText LastName = ViewBindings.findChildViewById(rootView, id);
      if (LastName == null) {
        break missingId;
      }

      id = R.id.STATE_FOR_PROFILE;
      TextInputLayout STATEFORPROFILE = ViewBindings.findChildViewById(rootView, id);
      if (STATEFORPROFILE == null) {
        break missingId;
      }

      id = R.id.STATES;
      AutoCompleteTextView STATES = ViewBindings.findChildViewById(rootView, id);
      if (STATES == null) {
        break missingId;
      }

      id = R.id.Sex_for_profile;
      TextInputLayout SexForProfile = ViewBindings.findChildViewById(rootView, id);
      if (SexForProfile == null) {
        break missingId;
      }

      id = R.id.User_id;
      TextInputLayout UserId = ViewBindings.findChildViewById(rootView, id);
      if (UserId == null) {
        break missingId;
      }

      id = R.id.address_profile;
      EditText addressProfile = ViewBindings.findChildViewById(rootView, id);
      if (addressProfile == null) {
        break missingId;
      }

      id = R.id.age1;
      TextView age1 = ViewBindings.findChildViewById(rootView, id);
      if (age1 == null) {
        break missingId;
      }

      id = R.id.age2;
      TextView age2 = ViewBindings.findChildViewById(rootView, id);
      if (age2 == null) {
        break missingId;
      }

      id = R.id.age_check_for_health;
      TextView ageCheckForHealth = ViewBindings.findChildViewById(rootView, id);
      if (ageCheckForHealth == null) {
        break missingId;
      }

      id = R.id.age_for_checking;
      TextView ageForChecking = ViewBindings.findChildViewById(rootView, id);
      if (ageForChecking == null) {
        break missingId;
      }

      id = R.id.age_profile;
      TextView ageProfile = ViewBindings.findChildViewById(rootView, id);
      if (ageProfile == null) {
        break missingId;
      }

      id = R.id.change_profile_picture;
      TextView changeProfilePicture = ViewBindings.findChildViewById(rootView, id);
      if (changeProfilePicture == null) {
        break missingId;
      }

      id = R.id.doctor;
      TextView doctor = ViewBindings.findChildViewById(rootView, id);
      if (doctor == null) {
        break missingId;
      }

      id = R.id.dummy_for_district;
      TextView dummyForDistrict = ViewBindings.findChildViewById(rootView, id);
      if (dummyForDistrict == null) {
        break missingId;
      }

      id = R.id.dummy_for_state;
      TextView dummyForState = ViewBindings.findChildViewById(rootView, id);
      if (dummyForState == null) {
        break missingId;
      }

      id = R.id.dummy_for_status;
      TextView dummyForStatus = ViewBindings.findChildViewById(rootView, id);
      if (dummyForStatus == null) {
        break missingId;
      }

      id = R.id.dummy_for_uri;
      TextView dummyForUri = ViewBindings.findChildViewById(rootView, id);
      if (dummyForUri == null) {
        break missingId;
      }

      id = R.id.email_profile;
      EditText emailProfile = ViewBindings.findChildViewById(rootView, id);
      if (emailProfile == null) {
        break missingId;
      }

      id = R.id.mobile_number_profile;
      EditText mobileNumberProfile = ViewBindings.findChildViewById(rootView, id);
      if (mobileNumberProfile == null) {
        break missingId;
      }

      id = R.id.name_profile;
      TextView nameProfile = ViewBindings.findChildViewById(rootView, id);
      if (nameProfile == null) {
        break missingId;
      }

      id = R.id.normal_person;
      TextView normalPerson = ViewBindings.findChildViewById(rootView, id);
      if (normalPerson == null) {
        break missingId;
      }

      id = R.id.password_profile;
      EditText passwordProfile = ViewBindings.findChildViewById(rootView, id);
      if (passwordProfile == null) {
        break missingId;
      }

      id = R.id.photo_layout;
      LinearLayout photoLayout = ViewBindings.findChildViewById(rootView, id);
      if (photoLayout == null) {
        break missingId;
      }

      id = R.id.profile_image;
      CircleImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.save_profile_text;
      TextView saveProfileText = ViewBindings.findChildViewById(rootView, id);
      if (saveProfileText == null) {
        break missingId;
      }

      return new ActivityProfileBinding((LinearLayout) rootView, DISTRICTFORPROFILE, DISTRICTS,
          FirstName, GENDER, IAmPerson, LANGUAGE, LanguageForProfile, LastName, STATEFORPROFILE,
          STATES, SexForProfile, UserId, addressProfile, age1, age2, ageCheckForHealth,
          ageForChecking, ageProfile, changeProfilePicture, doctor, dummyForDistrict, dummyForState,
          dummyForStatus, dummyForUri, emailProfile, mobileNumberProfile, nameProfile, normalPerson,
          passwordProfile, photoLayout, profileImage, saveProfileText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
