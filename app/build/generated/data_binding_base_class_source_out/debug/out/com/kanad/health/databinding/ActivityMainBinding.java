// Generated by view binder compiler. Do not edit!
package com.kanad.health.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kanad.health.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView applicationStatus;

  @NonNull
  public final ImageView bookedSlot;

  @NonNull
  public final ImageView changeSchedule;

  @NonNull
  public final ImageView checkdisease;

  @NonNull
  public final ImageView contactus;

  @NonNull
  public final ImageView contactus1;

  @NonNull
  public final ImageView covidcheck;

  @NonNull
  public final ScrollView doctorScrollView;

  @NonNull
  public final ImageView editVerificationDoctor;

  @NonNull
  public final ImageView govschemes;

  @NonNull
  public final ImageView govschemesDoctor;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final HometoolbarBinding include;

  @NonNull
  public final ImageView joinmeeting;

  @NonNull
  public final ImageView joinmeetingDoctor;

  @NonNull
  public final ImageView logout;

  @NonNull
  public final ImageView logoutDoctor;

  @NonNull
  public final ImageView mydoctors;

  @NonNull
  public final ImageView mypatient;

  @NonNull
  public final ImageView mypatientrequest;

  @NonNull
  public final TextView nametv;

  @NonNull
  public final TextView nametvDoctor;

  @NonNull
  public final ScrollView patientScrollView;

  @NonNull
  public final ImageView previousdoctors;

  @NonNull
  public final ImageView previouspatientDoctor;

  @NonNull
  public final ImageView privacypolicy;

  @NonNull
  public final ImageView privacypolicy1;

  @NonNull
  public final ImageView profile;

  @NonNull
  public final ImageView profileDoctor;

  @NonNull
  public final ImageView seedoctor;

  @NonNull
  public final ImageView seeprescription;

  @NonNull
  public final ImageView sendinfo;

  @NonNull
  public final ImageView sentprescriptionDoctor;

  @NonNull
  public final TextView spelizationHome;

  @NonNull
  public final TextView verificationStatus;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull TextView applicationStatus,
      @NonNull ImageView bookedSlot, @NonNull ImageView changeSchedule,
      @NonNull ImageView checkdisease, @NonNull ImageView contactus, @NonNull ImageView contactus1,
      @NonNull ImageView covidcheck, @NonNull ScrollView doctorScrollView,
      @NonNull ImageView editVerificationDoctor, @NonNull ImageView govschemes,
      @NonNull ImageView govschemesDoctor, @NonNull ImageView imageView2,
      @NonNull HometoolbarBinding include, @NonNull ImageView joinmeeting,
      @NonNull ImageView joinmeetingDoctor, @NonNull ImageView logout,
      @NonNull ImageView logoutDoctor, @NonNull ImageView mydoctors, @NonNull ImageView mypatient,
      @NonNull ImageView mypatientrequest, @NonNull TextView nametv, @NonNull TextView nametvDoctor,
      @NonNull ScrollView patientScrollView, @NonNull ImageView previousdoctors,
      @NonNull ImageView previouspatientDoctor, @NonNull ImageView privacypolicy,
      @NonNull ImageView privacypolicy1, @NonNull ImageView profile,
      @NonNull ImageView profileDoctor, @NonNull ImageView seedoctor,
      @NonNull ImageView seeprescription, @NonNull ImageView sendinfo,
      @NonNull ImageView sentprescriptionDoctor, @NonNull TextView spelizationHome,
      @NonNull TextView verificationStatus) {
    this.rootView = rootView;
    this.applicationStatus = applicationStatus;
    this.bookedSlot = bookedSlot;
    this.changeSchedule = changeSchedule;
    this.checkdisease = checkdisease;
    this.contactus = contactus;
    this.contactus1 = contactus1;
    this.covidcheck = covidcheck;
    this.doctorScrollView = doctorScrollView;
    this.editVerificationDoctor = editVerificationDoctor;
    this.govschemes = govschemes;
    this.govschemesDoctor = govschemesDoctor;
    this.imageView2 = imageView2;
    this.include = include;
    this.joinmeeting = joinmeeting;
    this.joinmeetingDoctor = joinmeetingDoctor;
    this.logout = logout;
    this.logoutDoctor = logoutDoctor;
    this.mydoctors = mydoctors;
    this.mypatient = mypatient;
    this.mypatientrequest = mypatientrequest;
    this.nametv = nametv;
    this.nametvDoctor = nametvDoctor;
    this.patientScrollView = patientScrollView;
    this.previousdoctors = previousdoctors;
    this.previouspatientDoctor = previouspatientDoctor;
    this.privacypolicy = privacypolicy;
    this.privacypolicy1 = privacypolicy1;
    this.profile = profile;
    this.profileDoctor = profileDoctor;
    this.seedoctor = seedoctor;
    this.seeprescription = seeprescription;
    this.sendinfo = sendinfo;
    this.sentprescriptionDoctor = sentprescriptionDoctor;
    this.spelizationHome = spelizationHome;
    this.verificationStatus = verificationStatus;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.applicationStatus;
      TextView applicationStatus = ViewBindings.findChildViewById(rootView, id);
      if (applicationStatus == null) {
        break missingId;
      }

      id = R.id.booked_slot;
      ImageView bookedSlot = ViewBindings.findChildViewById(rootView, id);
      if (bookedSlot == null) {
        break missingId;
      }

      id = R.id.change_schedule;
      ImageView changeSchedule = ViewBindings.findChildViewById(rootView, id);
      if (changeSchedule == null) {
        break missingId;
      }

      id = R.id.checkdisease;
      ImageView checkdisease = ViewBindings.findChildViewById(rootView, id);
      if (checkdisease == null) {
        break missingId;
      }

      id = R.id.contactus;
      ImageView contactus = ViewBindings.findChildViewById(rootView, id);
      if (contactus == null) {
        break missingId;
      }

      id = R.id.contactus1;
      ImageView contactus1 = ViewBindings.findChildViewById(rootView, id);
      if (contactus1 == null) {
        break missingId;
      }

      id = R.id.covidcheck;
      ImageView covidcheck = ViewBindings.findChildViewById(rootView, id);
      if (covidcheck == null) {
        break missingId;
      }

      id = R.id.doctor_scrollView;
      ScrollView doctorScrollView = ViewBindings.findChildViewById(rootView, id);
      if (doctorScrollView == null) {
        break missingId;
      }

      id = R.id.editVerification_doctor;
      ImageView editVerificationDoctor = ViewBindings.findChildViewById(rootView, id);
      if (editVerificationDoctor == null) {
        break missingId;
      }

      id = R.id.govschemes;
      ImageView govschemes = ViewBindings.findChildViewById(rootView, id);
      if (govschemes == null) {
        break missingId;
      }

      id = R.id.govschemes_doctor;
      ImageView govschemesDoctor = ViewBindings.findChildViewById(rootView, id);
      if (govschemesDoctor == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.include;
      View include = ViewBindings.findChildViewById(rootView, id);
      if (include == null) {
        break missingId;
      }
      HometoolbarBinding binding_include = HometoolbarBinding.bind(include);

      id = R.id.joinmeeting;
      ImageView joinmeeting = ViewBindings.findChildViewById(rootView, id);
      if (joinmeeting == null) {
        break missingId;
      }

      id = R.id.joinmeeting_doctor;
      ImageView joinmeetingDoctor = ViewBindings.findChildViewById(rootView, id);
      if (joinmeetingDoctor == null) {
        break missingId;
      }

      id = R.id.logout;
      ImageView logout = ViewBindings.findChildViewById(rootView, id);
      if (logout == null) {
        break missingId;
      }

      id = R.id.logout_doctor;
      ImageView logoutDoctor = ViewBindings.findChildViewById(rootView, id);
      if (logoutDoctor == null) {
        break missingId;
      }

      id = R.id.mydoctors;
      ImageView mydoctors = ViewBindings.findChildViewById(rootView, id);
      if (mydoctors == null) {
        break missingId;
      }

      id = R.id.mypatient;
      ImageView mypatient = ViewBindings.findChildViewById(rootView, id);
      if (mypatient == null) {
        break missingId;
      }

      id = R.id.mypatientrequest;
      ImageView mypatientrequest = ViewBindings.findChildViewById(rootView, id);
      if (mypatientrequest == null) {
        break missingId;
      }

      id = R.id.nametv;
      TextView nametv = ViewBindings.findChildViewById(rootView, id);
      if (nametv == null) {
        break missingId;
      }

      id = R.id.nametv_doctor;
      TextView nametvDoctor = ViewBindings.findChildViewById(rootView, id);
      if (nametvDoctor == null) {
        break missingId;
      }

      id = R.id.patient_scrollView;
      ScrollView patientScrollView = ViewBindings.findChildViewById(rootView, id);
      if (patientScrollView == null) {
        break missingId;
      }

      id = R.id.previousdoctors;
      ImageView previousdoctors = ViewBindings.findChildViewById(rootView, id);
      if (previousdoctors == null) {
        break missingId;
      }

      id = R.id.previouspatient_doctor;
      ImageView previouspatientDoctor = ViewBindings.findChildViewById(rootView, id);
      if (previouspatientDoctor == null) {
        break missingId;
      }

      id = R.id.privacypolicy;
      ImageView privacypolicy = ViewBindings.findChildViewById(rootView, id);
      if (privacypolicy == null) {
        break missingId;
      }

      id = R.id.privacypolicy1;
      ImageView privacypolicy1 = ViewBindings.findChildViewById(rootView, id);
      if (privacypolicy1 == null) {
        break missingId;
      }

      id = R.id.profile;
      ImageView profile = ViewBindings.findChildViewById(rootView, id);
      if (profile == null) {
        break missingId;
      }

      id = R.id.profile_doctor;
      ImageView profileDoctor = ViewBindings.findChildViewById(rootView, id);
      if (profileDoctor == null) {
        break missingId;
      }

      id = R.id.seedoctor;
      ImageView seedoctor = ViewBindings.findChildViewById(rootView, id);
      if (seedoctor == null) {
        break missingId;
      }

      id = R.id.seeprescription;
      ImageView seeprescription = ViewBindings.findChildViewById(rootView, id);
      if (seeprescription == null) {
        break missingId;
      }

      id = R.id.sendinfo;
      ImageView sendinfo = ViewBindings.findChildViewById(rootView, id);
      if (sendinfo == null) {
        break missingId;
      }

      id = R.id.sentprescription_doctor;
      ImageView sentprescriptionDoctor = ViewBindings.findChildViewById(rootView, id);
      if (sentprescriptionDoctor == null) {
        break missingId;
      }

      id = R.id.spelizationHome;
      TextView spelizationHome = ViewBindings.findChildViewById(rootView, id);
      if (spelizationHome == null) {
        break missingId;
      }

      id = R.id.verificationStatus;
      TextView verificationStatus = ViewBindings.findChildViewById(rootView, id);
      if (verificationStatus == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, applicationStatus, bookedSlot,
          changeSchedule, checkdisease, contactus, contactus1, covidcheck, doctorScrollView,
          editVerificationDoctor, govschemes, govschemesDoctor, imageView2, binding_include,
          joinmeeting, joinmeetingDoctor, logout, logoutDoctor, mydoctors, mypatient,
          mypatientrequest, nametv, nametvDoctor, patientScrollView, previousdoctors,
          previouspatientDoctor, privacypolicy, privacypolicy1, profile, profileDoctor, seedoctor,
          seeprescription, sendinfo, sentprescriptionDoctor, spelizationHome, verificationStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
