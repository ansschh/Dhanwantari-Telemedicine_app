// Generated by view binder compiler. Do not edit!
package com.kanad.health.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kanad.health.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRemotePatientMonitoringBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button calltopatient;

  @NonNull
  public final RecyclerView doctorsiderpm;

  @NonNull
  public final RpmtoolbarBinding include2;

  @NonNull
  public final Button sendalert;

  @NonNull
  public final Button stoprpm;

  private ActivityRemotePatientMonitoringBinding(@NonNull LinearLayout rootView,
      @NonNull Button calltopatient, @NonNull RecyclerView doctorsiderpm,
      @NonNull RpmtoolbarBinding include2, @NonNull Button sendalert, @NonNull Button stoprpm) {
    this.rootView = rootView;
    this.calltopatient = calltopatient;
    this.doctorsiderpm = doctorsiderpm;
    this.include2 = include2;
    this.sendalert = sendalert;
    this.stoprpm = stoprpm;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRemotePatientMonitoringBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRemotePatientMonitoringBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_remote_patient_monitoring, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRemotePatientMonitoringBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.calltopatient;
      Button calltopatient = ViewBindings.findChildViewById(rootView, id);
      if (calltopatient == null) {
        break missingId;
      }

      id = R.id.doctorsiderpm;
      RecyclerView doctorsiderpm = ViewBindings.findChildViewById(rootView, id);
      if (doctorsiderpm == null) {
        break missingId;
      }

      id = R.id.include2;
      View include2 = ViewBindings.findChildViewById(rootView, id);
      if (include2 == null) {
        break missingId;
      }
      RpmtoolbarBinding binding_include2 = RpmtoolbarBinding.bind(include2);

      id = R.id.sendalert;
      Button sendalert = ViewBindings.findChildViewById(rootView, id);
      if (sendalert == null) {
        break missingId;
      }

      id = R.id.stoprpm;
      Button stoprpm = ViewBindings.findChildViewById(rootView, id);
      if (stoprpm == null) {
        break missingId;
      }

      return new ActivityRemotePatientMonitoringBinding((LinearLayout) rootView, calltopatient,
          doctorsiderpm, binding_include2, sendalert, stoprpm);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
