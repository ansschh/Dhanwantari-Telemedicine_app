// Generated by view binder compiler. Do not edit!
package com.kanad.health.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.kanad.health.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDoctorFillForm2Binding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView back;

  @NonNull
  public final TextView dummyOfDoctorsName;

  @NonNull
  public final AutoCompleteTextView nameofcoucils;

  @NonNull
  public final TextView nextbutton2;

  @NonNull
  public final TextInputLayout regCoucils;

  @NonNull
  public final EditText regNumber;

  @NonNull
  public final TextInputLayout regYear;

  @NonNull
  public final TextInputLayout registrationInput;

  @NonNull
  public final AutoCompleteTextView registrationyear;

  private ActivityDoctorFillForm2Binding(@NonNull LinearLayout rootView, @NonNull TextView back,
      @NonNull TextView dummyOfDoctorsName, @NonNull AutoCompleteTextView nameofcoucils,
      @NonNull TextView nextbutton2, @NonNull TextInputLayout regCoucils,
      @NonNull EditText regNumber, @NonNull TextInputLayout regYear,
      @NonNull TextInputLayout registrationInput, @NonNull AutoCompleteTextView registrationyear) {
    this.rootView = rootView;
    this.back = back;
    this.dummyOfDoctorsName = dummyOfDoctorsName;
    this.nameofcoucils = nameofcoucils;
    this.nextbutton2 = nextbutton2;
    this.regCoucils = regCoucils;
    this.regNumber = regNumber;
    this.regYear = regYear;
    this.registrationInput = registrationInput;
    this.registrationyear = registrationyear;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDoctorFillForm2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDoctorFillForm2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_doctor_fill_form2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDoctorFillForm2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back;
      TextView back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.dummy_of_doctors_name;
      TextView dummyOfDoctorsName = ViewBindings.findChildViewById(rootView, id);
      if (dummyOfDoctorsName == null) {
        break missingId;
      }

      id = R.id.nameofcoucils;
      AutoCompleteTextView nameofcoucils = ViewBindings.findChildViewById(rootView, id);
      if (nameofcoucils == null) {
        break missingId;
      }

      id = R.id.nextbutton2;
      TextView nextbutton2 = ViewBindings.findChildViewById(rootView, id);
      if (nextbutton2 == null) {
        break missingId;
      }

      id = R.id.reg_coucils;
      TextInputLayout regCoucils = ViewBindings.findChildViewById(rootView, id);
      if (regCoucils == null) {
        break missingId;
      }

      id = R.id.reg_number;
      EditText regNumber = ViewBindings.findChildViewById(rootView, id);
      if (regNumber == null) {
        break missingId;
      }

      id = R.id.reg_year;
      TextInputLayout regYear = ViewBindings.findChildViewById(rootView, id);
      if (regYear == null) {
        break missingId;
      }

      id = R.id.registration_input;
      TextInputLayout registrationInput = ViewBindings.findChildViewById(rootView, id);
      if (registrationInput == null) {
        break missingId;
      }

      id = R.id.registrationyear;
      AutoCompleteTextView registrationyear = ViewBindings.findChildViewById(rootView, id);
      if (registrationyear == null) {
        break missingId;
      }

      return new ActivityDoctorFillForm2Binding((LinearLayout) rootView, back, dummyOfDoctorsName,
          nameofcoucils, nextbutton2, regCoucils, regNumber, regYear, registrationInput,
          registrationyear);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
