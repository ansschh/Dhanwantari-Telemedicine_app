// Generated by view binder compiler. Do not edit!
package com.kanad.health.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kanad.health.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MydoctoritemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView address;

  @NonNull
  public final TextView dob;

  @NonNull
  public final TextView email;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final CardView notificationcard;

  @NonNull
  public final TextView personname;

  @NonNull
  public final CircleImageView photo;

  @NonNull
  public final TextView sex;

  private MydoctoritemBinding(@NonNull CardView rootView, @NonNull TextView address,
      @NonNull TextView dob, @NonNull TextView email, @NonNull LinearLayout linearLayout2,
      @NonNull CardView notificationcard, @NonNull TextView personname,
      @NonNull CircleImageView photo, @NonNull TextView sex) {
    this.rootView = rootView;
    this.address = address;
    this.dob = dob;
    this.email = email;
    this.linearLayout2 = linearLayout2;
    this.notificationcard = notificationcard;
    this.personname = personname;
    this.photo = photo;
    this.sex = sex;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static MydoctoritemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MydoctoritemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.mydoctoritem, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MydoctoritemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address;
      TextView address = ViewBindings.findChildViewById(rootView, id);
      if (address == null) {
        break missingId;
      }

      id = R.id.dob;
      TextView dob = ViewBindings.findChildViewById(rootView, id);
      if (dob == null) {
        break missingId;
      }

      id = R.id.email;
      TextView email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      CardView notificationcard = (CardView) rootView;

      id = R.id.personname;
      TextView personname = ViewBindings.findChildViewById(rootView, id);
      if (personname == null) {
        break missingId;
      }

      id = R.id.photo;
      CircleImageView photo = ViewBindings.findChildViewById(rootView, id);
      if (photo == null) {
        break missingId;
      }

      id = R.id.sex;
      TextView sex = ViewBindings.findChildViewById(rootView, id);
      if (sex == null) {
        break missingId;
      }

      return new MydoctoritemBinding((CardView) rootView, address, dob, email, linearLayout2,
          notificationcard, personname, photo, sex);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
