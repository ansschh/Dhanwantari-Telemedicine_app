// Generated by view binder compiler. Do not edit!
package com.kanad.health.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kanad.health.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EnterOtpsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText otp1;

  @NonNull
  public final EditText otp2;

  @NonNull
  public final EditText otp3;

  @NonNull
  public final EditText otp4;

  @NonNull
  public final EditText otp5;

  @NonNull
  public final EditText otp6;

  private EnterOtpsBinding(@NonNull LinearLayout rootView, @NonNull EditText otp1,
      @NonNull EditText otp2, @NonNull EditText otp3, @NonNull EditText otp4,
      @NonNull EditText otp5, @NonNull EditText otp6) {
    this.rootView = rootView;
    this.otp1 = otp1;
    this.otp2 = otp2;
    this.otp3 = otp3;
    this.otp4 = otp4;
    this.otp5 = otp5;
    this.otp6 = otp6;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EnterOtpsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EnterOtpsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.enter_otps, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EnterOtpsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.otp1;
      EditText otp1 = ViewBindings.findChildViewById(rootView, id);
      if (otp1 == null) {
        break missingId;
      }

      id = R.id.otp2;
      EditText otp2 = ViewBindings.findChildViewById(rootView, id);
      if (otp2 == null) {
        break missingId;
      }

      id = R.id.otp3;
      EditText otp3 = ViewBindings.findChildViewById(rootView, id);
      if (otp3 == null) {
        break missingId;
      }

      id = R.id.otp4;
      EditText otp4 = ViewBindings.findChildViewById(rootView, id);
      if (otp4 == null) {
        break missingId;
      }

      id = R.id.otp5;
      EditText otp5 = ViewBindings.findChildViewById(rootView, id);
      if (otp5 == null) {
        break missingId;
      }

      id = R.id.otp6;
      EditText otp6 = ViewBindings.findChildViewById(rootView, id);
      if (otp6 == null) {
        break missingId;
      }

      return new EnterOtpsBinding((LinearLayout) rootView, otp1, otp2, otp3, otp4, otp5, otp6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
